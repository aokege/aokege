name: Build Rust for Linux
on:
  push:
    branches:
      - '**'

env:
  ERJINZHI_DIR: erjinzhi

jobs:
  build-and-commit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

     # - name: Install OpenSSL dev libraries and pkg-config
  #      run: |
       #   sudo apt-get update
        #  sudo apt-get install -y libssl-dev pkg-config gcc-arm-linux-gnueabihf gcc-aarch64-linux-gnu

      - name: Setup Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Add ARM targets
        run: rustup target add armv7-unknown-linux-gnueabihf aarch64-unknown-linux-gnu

      - name: Create erjinzhi folder
        run: mkdir -p $ERJINZHI_DIR

      - name: Build Linux x86_64
        run: |
          cargo build --release
          cp target/release/aokege $ERJINZHI_DIR/aokege-linux-x86_64

      - name: Build Linux ARMv7 (Raspberry Pi 32-bit)
        run: |
          cargo build --release --target armv7-unknown-linux-gnueabihf --features vendored
          cp target/armv7-unknown-linux-gnueabihf/release/aokege $ERJINZHI_DIR/aokege-linux-armv7

      - name: Build Linux ARM64 (Raspberry Pi 64-bit)
        run: |
          cargo build --release --target aarch64-unknown-linux-gnu
          cp target/aarch64-unknown-linux-gnu/release/aokege $ERJINZHI_DIR/aokege-linux-arm64

      - name: Commit binaries to repo
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add $ERJINZHI_DIR/
          git commit -m "Add compiled Linux and ARM binaries to /${ERJINZHI_DIR}" || echo "No changes to commit"
          git push
